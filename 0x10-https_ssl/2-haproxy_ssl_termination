global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Personal configuratios for project HTTP-SSL
	maxconn 2048 # This affects how many concurrent connections HAProxy will allow, which can affect QoS and prevent your web servers from crashing from trying to serve too many requests.
	tune.ssl.default-dh-param 2048 # configure the maximum size of temporary DHE keys that are generated
		

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

	# Personal configuratios for project HTTP-SSL
	option forwardfor # sets HAProxy to add X-Forwarded-For headers to each request
	option http-server-close #  reduces latency between HAProxy and your users by closing connections but maintaining keep-alives

frontend holbnbclone_http
	bind *:80
	reqadd X-Forwarded-Proto:\ http
	default_backend servers
	
frontend holbnbclone_https
	 bind *:443 ssl crt /etc/haproxy/certs/www.holbnbclone.tech.pem
	 reqadd X-Forwarded-Proto:\ https
	 acl letsencrypt-acl path_beg /.well-known/acme-challenge/ #  will enable us to renew the certificate without stopping the HAProxy service.
	 use_backend letsencrypt-backend if letsencrypt-acl
	 default_backend servers

backend servers
        balance roundrobin
	redirect scheme https if !{ ssl_fc }
        server 1185-web-01 34.73.6.26:80 check
        server 1185-web_02 35.227.39.47:80 check
	# option httpchk
	
backend letsencrypt-backend
	server letsencrypt 127.0.0.1:54321